{"version":3,"sources":["Homepage/styled.js","images/large.svg","images/plus.svg","Homepage/index.js","Cards/styled.js","images/close.svg","Cards/CurrentCard.js","Cards/Finish.js","Cards/triviaQuestions.js","Cards/index.js","Customize/styled.js","Customize/Question.js","Customize/Added.js","Customize/Error.js","Customize/index.js","App.js","reportWebVitals.js","index.js"],"names":["HomepageContainer","styled","div","WindowContainer","WindowBar","ButtonDiv","Text","Title","h1","GoButton","button","CardLink","Link","blink","keyframes","Underscore","span","Homepage","to","src","large","alt","width","plus","flexCenter","css","glow","CardsContainer","Card","props","justify","CardWindowBar","Question","Option","isActive","isEmpty","shake","hasSubmitted","isCorrect","ButtonContainer","SubmitButton","PlayAgainButton","Score","p","size","CurrentCard","question","setScore","score","getNextQuestion","setHasSubmitted","questionNumber","selectedOption","setSelectedOption","useState","setIsEmpty","checkCorrectAnswer","option","correct","close","options","map","onClick","setSelectedValue","selected","onAnimationEnd","e","finalAnswer","preventDefault","matchAnswer","disabled","Finish","window","location","reload","triviaQuestions","incorrect","currentRoundQuestions","questions","totalQuestions","length","random_index","Math","floor","random","includes","push","selectRandomQuestions","firstQuestion","pop","getRandomizedOptions","allOptions","concat","randomizedAllOptions","Cards","currentQuestion","setCurrentQuestion","isFinished","setIsFinished","setQuestionNumber","undefined","nextQuestion","nextOptions","CustomizedPage","Addcontainer","CloseImage","img","WindowText","WindowBody","align","Input","input","Textarea","textarea","Button","margin","api_path","PREFIX","setDisplayError","setDisplayAnother","newQuestion","setNewQuestion","newQuestionOption1","setNewQuestionOption1","newQuestionOption2","setNewQuestionOption2","newQuestionOption3","setNewQuestionOption3","newQuestionAnswer","setNewQuestionAnswer","a","fetch","method","headers","body","JSON","stringify","answer","response","json","console","log","onChange","target","value","required","type","addQuestion","Added","Error","Customize","displayAnother","displayError","data","getHello","App","basename","className","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48c10ccd.chunk.js","sourcesContent":["import styled, { keyframes } from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const HomepageContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  min-height: 100vh;\n  background-color: #d07e0e;\n`;\n\nexport const WindowContainer = styled.div`\n  border: 1px solid #2f2b32;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  width: 400px;\n  height: 525px;\n  flex-direction: column;\n  background-color: #f2f2f2;\n  box-shadow: 0 8px 6px -6px black;\n`;\n\nexport const WindowBar = styled.div`\n  width: 100%;\n  border-bottom: 1px solid #2f2b32;\n  height: 10%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const ButtonDiv = styled.div`\n  width: 70px;\n  margin: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  cursor: pointer;\n`;\n\nexport const Text = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  width: 100%;\n  height: 500px;\n`;\nexport const Title = styled.h1`\n  font-size: 20px;\n  margin-left: 5%;\n  font-weight: bold;\n\n  @media screen and (max-width: 420px) {\n    font-size: 40px;\n  }\n`;\n\nexport const TitleContainer = styled.div`\n  width: 80vw;\n  display: flex;\n  align-items: flex-end;\n  justify-content: flex-start;\n  border-top: 1px solid #2f2b32;\n  margin: 20vh 10vw 0vh 10vw;\n`;\n\nexport const StartContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  width: 100vw;\n  margin-top: 15vh;\n\n  @media screen and (max-width: 425px) {\n    margin: 1rem;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nexport const GoButton = styled.button`\n  border: 1px solid #2f2b32;\n  cursor: pointer;\n  outline: none;\n  padding: 5px;\n\n  &:hover {\n    background-color: #dfdfdf;\n  }\n\n  @media screen and (max-width: 420px) {\n    margin: 30px auto;\n  }\n`;\n\nexport const CardLink = styled(Link)`\n  color: #2f2b32;\n  text-decoration: none;\n  font-size: 30px;\n  font-family: \"Cutive Mono\", monospace;\n  font-weight: bold;\n  width: 100%;\n  height: 100%;\n\n  @media screen and (max-width: 420px) {\n    font-size: 40px;\n  }\n`;\n\nconst blink = keyframes`\n0% {\n  opacity: 0;\n}\n100% {\n  opacity: 1;\n}\n`;\n\nexport const Underscore = styled.span`\n  animation: ${blink} 0.5s infinite ease;\n`;\n","export default __webpack_public_path__ + \"static/media/large.224738ef.svg\";","export default __webpack_public_path__ + \"static/media/plus.c82024f4.svg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  HomepageContainer,\n  WindowContainer,\n  WindowBar,\n  ButtonDiv,\n  Text,\n  Title,\n  GoButton,\n  CardLink,\n  Underscore,\n} from \"./styled\";\n\nimport large from \"../images/large.svg\";\nimport plus from \"../images/plus.svg\";\n\nconst Homepage = () => {\n  return (\n    <HomepageContainer>\n      <WindowContainer>\n        <WindowBar>\n          <Title>Test Your Knowledge</Title>\n          <ButtonDiv>\n            <Link to=\"/cards\">\n              <img src={large} alt=\"fake large\" width=\"25\" />\n            </Link>\n            <Link to=\"/customize\">\n              <img src={plus} alt=\"fake close\" width=\"25\" />\n            </Link>\n          </ButtonDiv>\n        </WindowBar>\n        <Text>\n          <h3>\n            Ready<Underscore>_</Underscore>\n          </h3>\n          <GoButton>\n            <CardLink to=\"/cards\">Start</CardLink>\n          </GoButton>\n        </Text>\n      </WindowContainer>\n    </HomepageContainer>\n  );\n};\n\nexport default Homepage;\n","import styled, { css, keyframes } from \"styled-components\";\n\nconst flexCenter = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nconst glow = css`\n  box-shadow: 0 0 10px #f2f2f2, 0 0 40px #f2f2f2, 0 0 80px #f2f2f2;\n`;\n\nexport const CardsContainer = styled.div`\n  ${flexCenter}\n  min-height: 100vh;\n  background: #a73e2b;\n`;\n\n//card\n\nexport const Card = styled.div`\n  ${flexCenter}\n  background: #2f2b32;\n  color: #f2f2f2;\n  padding: 0px 0px 20px 0px;\n  width: 400px;\n  height: 525px;\n  box-shadow: 0 8px 6px -6px black;\n  justify-content: ${(props) => props.justify || \"flex-start\"};\n\n  @media screen and (max-width: 375px) {\n    width: 90vw;\n  }\n  @media screen and (max-width: 320px) {\n    width: 90vw;\n    height: 90vh;\n  }\n`;\n\nexport const CardWindowBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: ${(props) => props.justify || \"space-between\"};\n  background-color: #f2f2f2;\n  width: 90%;\n  height: 40px;\n  color: #2f2b32;\n  padding: 0 5% 0 5%;\n  font-size: 25px;\n`;\n\nexport const Question = styled.div`\n  font-size: 25px;\n  width: 90%;\n  margin: 25px 0;\n  text-align: left;\n`;\n\nexport const Option = styled.div`\n  background: #f2f2f2;\n  color: #2f2b32;\n  width: 90%;\n  margin: 10px;\n  font-size: 15px;\n  font-weight: bold;\n  cursor: pointer;\n\n  &:hover {\n    ${glow}\n  }\n\n  ${(props) => {\n    return (\n      props.isActive &&\n      css`\n        box-shadow: 0 0 10px #f2f2f2, 0 0 40px #f2f2f2, 0 0 80px #f2f2f2;\n      `\n    );\n  }}\n\n  ${(props) => {\n    return (\n      props.isEmpty &&\n      css`\n        animation: ${shake} 1s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;\n      `\n    );\n  }}\n\n  ${(props) => {\n    return (\n      props.hasSubmitted &&\n      !props.isCorrect &&\n      css`\n        background-color: #a73e2b;\n      `\n    );\n  }}\n\n  ${(props) => {\n    return (\n      props.hasSubmitted &&\n      props.isCorrect &&\n      css`\n        background-color: #2f615e;\n      `\n    );\n  }}\n`;\n\nexport const ButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nexport const SubmitButton = styled.button`\n  font-family: \"Open Sans\";\n  font-weight: bold;\n  padding: 10px 35px;\n  font-size: 15px;\n  background: #f2f2f2;\n  color: #2f2b32;\n  margin: 15px;\n  cursor: pointer;\n  border: none;\n  font-family: \"Cutive Mono\", monospace;\n  outline: none;\n\n  &:hover {\n    ${glow}\n  }\n`;\n\nconst shake = keyframes` \n10%, 90% {\n  transform: translate3d(-5px, 0, 0);\n}\n\n20%, 80% {\n  transform: translate3d(5px, 0, 0);\n}\n\n30%, 50%, 70% {\n  transform: translate3d(-5px, 0, 0);\n}\n\n40%, 60% {\n  transform: translate3d(5px, 0, 0);\n}\n  `;\n\n//finish component\nexport const PlayAgainButton = styled.button`\n  color: #2f2b32;\n  background-color: #f2f2f2;\n  border: none;\n  outline: none;\n  font-weight: bold;\n  padding: 10px 35px;\n  margin-top: 50px;\n  font-size: 25px;\n  font-family: \"Cutive Mono\", monospace;\n  cursor: pointer;\n  &:hover {\n    ${glow}\n  }\n`;\n\nexport const Score = styled.p`\n  font-size: ${(props) => props.size || 50}px;\n  margin: 0 0 20px 0;\n`;\n","export default __webpack_public_path__ + \"static/media/close.f88a6a34.svg\";","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  Question,\n  Option,\n  SubmitButton,\n  CardWindowBar,\n  ButtonContainer,\n} from \"./styled\";\n\nimport close from \"../images/close.svg\";\n\nconst CurrentCard = ({\n  question,\n  setScore,\n  score,\n  getNextQuestion,\n  hasSubmitted,\n  setHasSubmitted,\n  questionNumber,\n  selectedOption,\n  setSelectedOption,\n}) => {\n  const [isEmpty, setIsEmpty] = useState(false);\n\n  function setSelectedValue(option) {\n    if (!hasSubmitted) {\n      setSelectedOption(option);\n    }\n  }\n  function checkSelect(selected) {\n    if (selected === selectedOption) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  function checkCorrectAnswer(option) {\n    if (option === question.correct) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  function matchAnswer(e, finalAnswer) {\n    e.preventDefault();\n    if (finalAnswer === \"\") {\n      setIsEmpty(true);\n      return;\n    } else {\n      setHasSubmitted(true);\n    }\n    if (finalAnswer === question.correct) {\n      setScore(score + 1);\n    }\n  }\n\n  return (\n    <Card>\n      <CardWindowBar>\n        <p>Question {questionNumber}:</p>\n        <Link to=\"/\">\n          <img src={close} alt=\"to home\" width=\"20\" />\n        </Link>\n      </CardWindowBar>\n      <Question>{question.question}</Question>\n      {question.options.map((option) => {\n        return (\n          <Option\n            key={option}\n            isCorrect={checkCorrectAnswer(option)}\n            onClick={() => setSelectedValue(option)}\n            isActive={checkSelect(option)}\n            isEmpty={isEmpty}\n            onAnimationEnd={() => setIsEmpty(false)}\n            hasSubmitted={hasSubmitted}\n          >\n            <p>{option}</p>\n          </Option>\n        );\n      })}\n      <ButtonContainer>\n        {!hasSubmitted && (\n          <SubmitButton\n            onClick={(e) => matchAnswer(e, selectedOption)}\n            disabled={hasSubmitted}\n          >\n            Submit\n          </SubmitButton>\n        )}\n        {hasSubmitted && (\n          <SubmitButton onClick={getNextQuestion} disabled={!hasSubmitted}>\n            Next\n          </SubmitButton>\n        )}\n      </ButtonContainer>\n    </Card>\n  );\n};\n\nexport default CurrentCard;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, PlayAgainButton, Score, CardWindowBar } from \"./styled\";\nimport close from \"../images/close.svg\";\n\nconst Finish = ({ score }) => {\n  function reload() {\n    window.location.reload(true);\n  }\n  return (\n    <Card justify={\"space-between\"}>\n      <CardWindowBar justify={\"flex-end\"}>\n        <Link to=\"/\">\n          <img src={close} alt=\"to home\" width=\"20\" />\n        </Link>\n      </CardWindowBar>\n      <div>\n        <Score size={25}>Score:</Score>\n        <Score>{score}/10</Score>\n      </div>\n      <PlayAgainButton onClick={(e) => reload()}>Play Again</PlayAgainButton>\n    </Card>\n  );\n};\n\nexport default Finish;\n","const triviaQuestions = [\n  {\n    question: \"What was Tandem previous name?\",\n    incorrect: [\"Tandem\", \"Burger Shack\", \"Extraordinary Humans\"],\n    correct: \"Devmynd\",\n  },\n  {\n    question:\n      \"In Shakespeare's play Julius Caesar, Caesar's last words were...\",\n    incorrect: [\"Iacta alea est!\", \"Vidi, vini, vici\", \"Aegri somnia vana\"],\n    correct: \"Et tu, Brute?\",\n  },\n  {\n    question: \"A group of tigers are referred to as:\",\n    incorrect: [\"Chowder\", \"Pride\", \"Destruction\"],\n    correct: \"Ambush\",\n  },\n  {\n    question: \"What is the top speed an average cat can travel?\",\n    incorrect: [\"42 mph\", \"13 mph\", \"9 mph\"],\n    correct: \"31 mph\",\n  },\n  {\n    question: \"A cat can jump to _____ times its own height:\",\n    incorrect: [\"3\", \"9\", \"7\"],\n    correct: \"5\",\n  },\n  {\n    question: \"What is the only letter that doesn't appear in a US state name?\",\n    incorrect: [\"M\", \"Z\", \"X\"],\n    correct: \"Q\",\n  },\n  {\n    question: \"What is the name for a cow-bison hybrid?\",\n    incorrect: [\"Cowson\", \"Bicow\", \"Mooson\"],\n    correct: \"Beefalo\",\n  },\n  {\n    question: \"What is the largest freshwater lake in the world?\",\n    incorrect: [\"Lake Baikal\", \"Lake Michigan\", \"Lake Victoria\"],\n    correct: \"Lake Superior\",\n  },\n\n  {\n    question: \"In a website address bar, what does WWW stand for?\",\n    incorrect: [\"Wild Wild West\", \"War World Web\"],\n    correct: \"World Wide Web\",\n  },\n  {\n    question:\n      \"In a game of bingo, what number is represented by the name two little ducks?\",\n    incorrect: [\"20\", \"55\", \"77\"],\n    correct: \"22\",\n  },\n  {\n    question: \"According to Greek mythology, who was the first woman on Earth?\",\n    incorrect: [\"Lilith\", \"Eve\", \"Hera\"],\n    correct: \"Pandora\",\n  },\n  {\n    question: \"In which European city would you find Orly airport?\",\n    incorrect: [\"London\", \"Belgium\", \"Munich\"],\n    correct: \"Paris\",\n  },\n  {\n    question: \"Where would you find the Sea of Tranquility?\",\n    incorrect: [\"California\", \"Siberia\", \"China\"],\n    correct: \"The Moon\",\n  },\n  {\n    question: \"Which artist painted 'Girl with a Pearl Earrin'?\",\n    incorrect: [\"Van Gogh\", \"Picasso\", \"Da Vinci\"],\n    correct: \"Vermeer\",\n  },\n  {\n    question: \"What is the official name for the 'hashtag' symbol?\",\n    incorrect: [\"Number sign\", \"Hash Sign\", \"Pound\"],\n    correct: \"Octothorpe\",\n  },\n  {\n    question: \"Not American at all, where is apple pie from?\",\n    incorrect: [\"Japan\", \"Ethiopia\", \"Canada\"],\n    correct: \"England\",\n  },\n  {\n    question: \"What is the national animal of Scotland?\",\n    incorrect: [\"Bear\", \"Rabbit\", \"Seal\"],\n    correct: \"Unicorn\",\n  },\n  {\n    question:\n      \"Where in the world is the only place where Canada is *due south*\",\n    incorrect: [\"Alaska\", \"Russia\", \"Washington\"],\n    correct: \"Detroit\",\n  },\n  {\n    question: \"Approximately how many grapes go into a bottle of wine?\",\n    incorrect: [\"500\", \"200\", \"1000\"],\n    correct: \"700\",\n  },\n  {\n    question: \"How much does a US One Dollar Bill cost to make?\",\n    incorrect: [\"$0.25\", \"$1\", \"$5\"],\n    correct: \"$0.05\",\n  },\n  {\n    question:\n      \"The Vatican bank has the only ATM in the world that allows users to do what?\",\n    incorrect: [\n      \"Receive withdrawls in rosary beads\",\n      \"Vote for the Pope\",\n      \"Purchase indulgences\",\n    ],\n    correct: \"Perform transactions in Latin\",\n  },\n];\n\nexport default triviaQuestions;\n","import React, { useState } from \"react\";\nimport { CardsContainer, Score } from \"./styled\";\n\nimport CurrentCard from \"./CurrentCard\";\nimport Finish from \"./Finish\";\nimport triviaQuestions from \"./triviaQuestions\";\n\nexport function selectRandomQuestions(triviaQuestions) {\n  const questions = [];\n  const totalQuestions = triviaQuestions.length;\n\n  while (questions.length !== 10) {\n    const random_index = Math.floor(Math.random() * Math.floor(totalQuestions));\n    if (!questions.includes(random_index)) {\n      questions.push(random_index);\n    }\n  }\n  return questions;\n}\n\nconst currentRoundQuestions = selectRandomQuestions(triviaQuestions);\nconst firstQuestion = triviaQuestions[currentRoundQuestions.pop()];\n\nexport function getRandomizedOptions(question) {\n  const allOptions = question.incorrect.concat(question.correct);\n  const randomizedAllOptions = [];\n  while (randomizedAllOptions.length !== allOptions.length) {\n    const selectedOption =\n      allOptions[Math.floor(Math.random() * allOptions.length)];\n    if (!randomizedAllOptions.includes(selectedOption)) {\n      randomizedAllOptions.push(selectedOption);\n    }\n  }\n  return randomizedAllOptions;\n}\n\nconst options = getRandomizedOptions(firstQuestion);\nfirstQuestion[\"options\"] = options;\n\nconst Cards = () => {\n  const [score, setScore] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [currentQuestion, setCurrentQuestion] = useState(firstQuestion);\n  const [hasSubmitted, setHasSubmitted] = useState(false);\n  const [isFinished, setIsFinished] = useState(false);\n  const [questionNumber, setQuestionNumber] = useState(1);\n\n  function getNextQuestion() {\n    if (currentRoundQuestions.length === 0) {\n      setIsFinished(true);\n    } else {\n      const nextQuestion = triviaQuestions[currentRoundQuestions.pop()];\n      const nextOptions = getRandomizedOptions(nextQuestion);\n      nextQuestion[\"options\"] = nextOptions;\n      setCurrentQuestion(nextQuestion);\n      setQuestionNumber(questionNumber + 1);\n      setHasSubmitted(false);\n      setSelectedOption(\"\");\n    }\n  }\n\n  if (currentQuestion === undefined) {\n    return null;\n  }\n\n  return (\n    <CardsContainer>\n      {!isFinished && <Score size={25}>Score: {score}</Score>}\n      {!isFinished && (\n        <CurrentCard\n          question={currentQuestion}\n          setScore={setScore}\n          score={score}\n          getNextQuestion={getNextQuestion}\n          hasSubmitted={hasSubmitted}\n          setHasSubmitted={setHasSubmitted}\n          questionNumber={questionNumber}\n          selectedOption={selectedOption}\n          setSelectedOption={setSelectedOption}\n        />\n      )}\n      {isFinished && <Finish score={score} />}\n    </CardsContainer>\n  );\n};\n\nexport default Cards;\n","import styled from \"styled-components\";\n\nexport const CustomizedPage = styled.div`\n  background-color: #2f615e;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Addcontainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 400px;\n  flex-direction: column;\n  border: 1px solid #2f2b32;\n  background-color: #f2f2f2;\n  box-shadow: 0 8px 6px -6px black;\n`;\n\nexport const WindowBar = styled.div`\n  border: 1px solid #2f2b32;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nexport const CloseImage = styled.img`\n  width: 20px;\n  margin-right: 10px;\n  cursor: pointer;\n`;\n\nexport const WindowText = styled.p`\n  margin: 0 0 0 15px;\n  font-weight: bold;\n  font-size: 20px;\n`;\n\nexport const WindowBody = styled.div`\n  display: flex;\n  align-items: ${(props) => props.align};\n  justify-content: center;\n  flex-direction: column;\n  margin: 20px;\n  height: 475px;\n`;\n\nexport const Input = styled.input`\n  outline: none;\n  height: 20px;\n  width: 200px;\n  font-family: \"Cutive Mono\", monospace;\n  margin-left: 20px;\n  font-size: 15px;\n  margin-bottom: 5px;\n`;\n\nexport const Textarea = styled.textarea`\n  width: 200px;\n  font-family: \"Cutive Mono\", monospace;\n  margin-left: 20px;\n  height: 100px;\n  font-size: 15px;\n  outline: none;\n`;\n\nexport const Button = styled.button`\n  outline: none;\n  padding: 10px;\n  font-family: \"Cutive Mono\", monospace;\n  font-size: 15px;\n  cursor: pointer;\n  margin: ${(props) => props.margin};\n`;\n","import React, { useState } from \"react\";\nimport { WindowBody, Input, Textarea, Button } from \"./styled\";\n\nconst DEBUG = process.env.NODE_ENV === \"development\" ? true : false;\nconst PREFIX = DEBUG\n  ? \"http://0.0.0.0:8000\"\n  : \"https://triviaknowledge.herokuapp.com/\";\nconst api_path = PREFIX + \"/api/question\";\n\nconst Question = ({ setDisplayError, setDisplayAnother }) => {\n  const [newQuestion, setNewQuestion] = useState(\"\");\n  const [newQuestionOption1, setNewQuestionOption1] = useState(\"\");\n  const [newQuestionOption2, setNewQuestionOption2] = useState(\"\");\n  const [newQuestionOption3, setNewQuestionOption3] = useState(\"\");\n  const [newQuestionAnswer, setNewQuestionAnswer] = useState(\"\");\n\n  async function addQuestion() {\n    try {\n      const response = await fetch(api_path, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          question: newQuestion,\n          options: [newQuestionOption1, newQuestionOption2, newQuestionOption3],\n          answer: newQuestionAnswer,\n        }),\n      });\n      const data = await response.json();\n      if (data === \"yayy\") {\n        setDisplayAnother(true);\n      } else {\n        setDisplayError(true);\n      }\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n  return (\n    <WindowBody align={\"flex-start\"}>\n      <p>Question:</p>\n      <Textarea onChange={(e) => setNewQuestion(e.target.value)} required />\n      <p>Incorrect Options:</p>\n      <div>\n        <Input\n          type=\"text\"\n          onChange={(e) => setNewQuestionOption1(e.target.value)}\n          required\n        />\n        <br />\n        <Input\n          type=\"text\"\n          onChange={(e) => setNewQuestionOption2(e.target.value)}\n          required\n        />\n        <br />\n        <Input\n          type=\"text\"\n          onChange={(e) => setNewQuestionOption3(e.target.value)}\n          required\n        />\n        <br />\n      </div>\n      <p>Answer</p>\n      <Input\n        type=\"text\"\n        onChange={(e) => setNewQuestionAnswer(e.target.value)}\n        required\n      />\n      <Button margin={\"20px 0px 20px 150px\"} onClick={() => addQuestion()}>\n        Submit\n      </Button>\n    </WindowBody>\n  );\n};\n\nexport default Question;\n","import React from \"react\";\nimport { WindowBody, Button } from \"./styled\";\n\nconst Added = ({ setDisplayAnother }) => {\n  return (\n    <WindowBody align={\"center\"}>\n      <h2>Question added!</h2>\n      <p>What's next?</p>\n      <div>\n        <Button onClick={() => setDisplayAnother(false)} margin={\"10px\"}>\n          Add Another\n        </Button>\n        <Button margin={\"10px\"}>Start Game</Button>\n      </div>\n    </WindowBody>\n  );\n};\n\nexport default Added;\n","import React from \"react\";\nimport { WindowBody, Button } from \"./styled\";\n\nconst Error = ({ setDisplayError }) => {\n  return (\n    <WindowBody align={\"center\"}>\n      <h2>There was an issue adding a question, please try again</h2>\n      <Button onClick={() => setDisplayError(false)} margin={\"10px\"}>\n        Try Again\n      </Button>\n    </WindowBody>\n  );\n};\n\nexport default Error;\n","import React, { useState } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport Question from \"./Question\";\nimport Added from \"./Added\";\nimport Error from \"./Error\";\n\nimport {\n  CustomizedPage,\n  Addcontainer,\n  WindowBar,\n  CloseImage,\n  WindowText,\n} from \"./styled\";\nimport close from \"../images/close.svg\";\n\nconst Customize = () => {\n  const [displayAnother, setDisplayAnother] = useState(false);\n  const [displayError, setDisplayError] = useState(false);\n\n  async function getHello() {\n    try {\n      const response = await fetch(\n        \"https://triviaknowledgeapi.herokuapp.com/api/hello\"\n      );\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  return (\n    <CustomizedPage>\n      <Addcontainer>\n        <WindowBar>\n          <WindowText>Add A Question</WindowText>\n          <Link to=\"/\">\n            <CloseImage src={close} alt=\"fake close\" />\n          </Link>\n        </WindowBar>\n        {!displayAnother && !displayError && (\n          <Question\n            setDisplayAnother={setDisplayAnother}\n            setDisplayError={setDisplayError}\n          />\n        )}\n        {displayAnother && <Added setDisplayAnother={setDisplayAnother} />}\n        {displayError && <Error setDisplayError={setDisplayError} />}\n        <button onClick={() => getHello()}></button>\n      </Addcontainer>\n    </CustomizedPage>\n  );\n};\n\nexport default Customize;\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Homepage from \"./Homepage\";\nimport Cards from \"./Cards\";\nimport Customize from \"./Customize\";\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <div className=\"App\">\n        <Route exact path=\"/\" component={Homepage} />\n        <Route path=\"/cards\" component={Cards} />\n        <Route path=\"/customize\" component={Customize} />\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}