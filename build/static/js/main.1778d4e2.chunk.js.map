{"version":3,"sources":["Homepage/styled.js","images/close.svg","images/large.svg","images/minimize.svg","Homepage/index.js","Cards/styled.js","Cards/CurrentCard.js","Cards/Finish.js","Cards/triviaQuestions.js","Cards/index.js","Customize/index.js","App.js","reportWebVitals.js","index.js"],"names":["HomepageContainer","styled","div","WindowContainer","WindowBar","FakeButton","Text","Title","h1","ReadyH2","h2","GoButton","button","CardLink","Link","Homepage","src","minimize","alt","width","large","close","to","flexCenter","css","glow","CardsContainer","Card","props","justify","CardWindowBar","Question","Option","isActive","isEmpty","shake","hasSubmitted","isCorrect","ButtonContainer","SubmitButton","keyframes","PlayAgainButton","Score","p","size","CurrentCard","question","setScore","score","getNextQuestion","setHasSubmitted","questionNumber","selectedOption","setSelectedOption","useState","setIsEmpty","checkCorrectAnswer","option","correct","options","map","onClick","setSelectedValue","selected","onAnimationEnd","e","finalAnswer","preventDefault","matchAnswer","disabled","Finish","window","location","reload","triviaQuestions","incorrect","currentRoundQuestions","questions","totalQuestions","length","random_index","Math","floor","random","includes","push","selectRandomQuestions","firstQuestion","pop","getRandomizedOptions","allOptions","concat","randomizedAllOptions","Cards","currentQuestion","setCurrentQuestion","isFinished","setIsFinished","setQuestionNumber","undefined","nextQuestion","nextOptions","api_path","PREFIX","Customize","newQuestion","setNewQuestion","newQuestionOption1","setNewQuestionOption1","newQuestionOption2","setNewQuestionOption2","newQuestionOption3","setNewQuestionOption3","newQuestionAnswer","setNewQuestionAnswer","a","fetch","method","headers","body","JSON","stringify","answer","response","json","data","console","log","type","onChange","target","value","addQuestion","App","basename","className","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1778d4e2.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const HomepageContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  min-height: 100vh;\n  background-color: #ffaa2b;\n`;\n\nexport const WindowContainer = styled.div`\n  border: 1px solid #2f2b32;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  width: 80vw;\n  height: 70vh;\n  flex-direction: column;\n  background-color: #f2f2f2;\n  box-shadow: 0 8px 6px -6px black;\n`;\n\nexport const WindowBar = styled.div`\n  width: 100%;\n  border-bottom: 1px solid #2f2b32;\n  height: 10%;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nexport const FakeButton = styled.div`\n  width: 100px;\n  margin: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const Text = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: flex-start;\n  flex-direction: column;\n  width: 100%;\n`;\nexport const Title = styled.h1`\n  font-family: \"Cutive Mono\", monospace;\n  font-size: 50px;\n  margin-left: 5%;\n\n  @media screen and (max-width: 420px) {\n    font-size: 40px;\n  }\n`;\n\nexport const TitleContainer = styled.div`\n  width: 80vw;\n  display: flex;\n  align-items: flex-end;\n  justify-content: flex-start;\n  border-top: 1px solid #2f2b32;\n  margin: 20vh 10vw 0vh 10vw;\n`;\n\nexport const StartContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  width: 100vw;\n  margin-top: 15vh;\n\n  @media screen and (max-width: 425px) {\n    margin: 1rem;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nexport const ReadyH2 = styled.h2`\n  font-size: 30px;\n  margin-left: 30%;\n\n  @media screen and (max-width: 420px) {\n    margin: auto;\n  }\n`;\n\nexport const GoButton = styled.button`\n  border: 1px solid #2f2b32;\n  cursor: pointer;\n  outline: none;\n  margin-left: 40%;\n  padding: 10px;\n\n  &:hover {\n    background: #2f2b32;\n  }\n\n  @media screen and (max-width: 420px) {\n    margin: 30px auto;\n  }\n`;\n\nexport const CardLink = styled(Link)`\n  color: #2f2b32;\n  text-decoration: none;\n  font-size: 50px;\n  font-family: \"Cutive Mono\", monospace;\n  font-weight: bold;\n  width: 100%;\n  height: 100%;\n  &:hover {\n    color: #f2f2f2;\n  }\n\n  @media screen and (max-width: 420px) {\n    font-size: 40px;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/close.f88a6a34.svg\";","export default __webpack_public_path__ + \"static/media/large.224738ef.svg\";","export default __webpack_public_path__ + \"static/media/minimize.c7446e06.svg\";","import React from \"react\";\nimport {\n  HomepageContainer,\n  WindowContainer,\n  WindowBar,\n  FakeButton,\n  Text,\n  Title,\n  GoButton,\n  ReadyH2,\n  CardLink,\n} from \"./styled\";\n\nimport close from \"../images/close.svg\";\nimport large from \"../images/large.svg\";\nimport minimize from \"../images/minimize.svg\";\n\nconst Homepage = () => {\n  return (\n    <HomepageContainer>\n      <WindowContainer>\n        <WindowBar>\n          <FakeButton>\n            <img src={minimize} alt=\"fake minimize\" width=\"25\" />\n            <img src={large} alt=\"fake large\" width=\"25\" />\n            <img src={close} alt=\"fake close\" width=\"25\" />\n          </FakeButton>\n        </WindowBar>\n        <Text>\n          <Title>Test Your Knowledge</Title>\n          <ReadyH2>Ready_</ReadyH2>\n          <GoButton>\n            <CardLink to=\"/cards\">START</CardLink>\n          </GoButton>\n        </Text>\n      </WindowContainer>\n    </HomepageContainer>\n  );\n};\n\nexport default Homepage;\n","import styled, { css, keyframes } from \"styled-components\";\n\nconst flexCenter = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nconst glow = css`\n  box-shadow: 0 0 10px #f2f2f2, 0 0 40px #f2f2f2, 0 0 80px #f2f2f2;\n`;\n\nexport const CardsContainer = styled.div`\n  ${flexCenter}\n  min-height: 100vh;\n  background: #ff4d52;\n`;\n\n//card\n\nexport const Card = styled.div`\n  ${flexCenter}\n  background: #2f2b32;\n  color: #f2f2f2;\n  padding: 0px 0px 20px 0px;\n  width: 400px;\n  height: 525px;\n  box-shadow: 0 8px 6px -6px black;\n  justify-content: ${(props) => props.justify || \"flex-start\"};\n\n  @media screen and (max-width: 375px) {\n    width: 90vw;\n  }\n  @media screen and (max-width: 320px) {\n    width: 90vw;\n    height: 90vh;\n  }\n`;\n\nexport const CardWindowBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: ${(props) => props.justify || \"space-between\"};\n  background-color: #f2f2f2;\n  width: 90%;\n  height: 40px;\n  color: #2f2b32;\n  padding: 0 5% 0 5%;\n  font-size: 25px;\n`;\n\nexport const Question = styled.div`\n  font-size: 25px;\n  width: 90%;\n  margin: 25px 0;\n  text-align: left;\n`;\n\nexport const Option = styled.div`\n  background: #f2f2f2;\n  color: #2f2b32;\n  width: 90%;\n  margin: 10px;\n  font-size: 15px;\n  font-weight: bold;\n  cursor: pointer;\n\n  &:hover {\n    ${glow}\n  }\n\n  ${(props) => {\n    return (\n      props.isActive &&\n      css`\n        box-shadow: 0 0 10px #f2f2f2, 0 0 40px #f2f2f2, 0 0 80px #f2f2f2;\n      `\n    );\n  }}\n\n  ${(props) => {\n    return (\n      props.isEmpty &&\n      css`\n        animation: ${shake} 1s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;\n      `\n    );\n  }}\n\n  ${(props) => {\n    return (\n      props.hasSubmitted &&\n      !props.isCorrect &&\n      css`\n        background-color: #b21336;\n      `\n    );\n  }}\n\n  ${(props) => {\n    return (\n      props.hasSubmitted &&\n      props.isCorrect &&\n      css`\n        background-color: #048574;\n      `\n    );\n  }}\n`;\n\nexport const ButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nexport const SubmitButton = styled.button`\n  font-family: \"Open Sans\";\n  font-weight: bold;\n  padding: 10px 35px;\n  font-size: 15px;\n  background: #f2f2f2;\n  color: #2f2b32;\n  margin: 15px;\n  cursor: pointer;\n  border: none;\n  font-family: \"Cutive Mono\", monospace;\n  outline: none;\n\n  &:hover {\n    ${glow}\n  }\n`;\n\nconst shake = keyframes` \n10%, 90% {\n  transform: translate3d(-5px, 0, 0);\n}\n\n20%, 80% {\n  transform: translate3d(5px, 0, 0);\n}\n\n30%, 50%, 70% {\n  transform: translate3d(-5px, 0, 0);\n}\n\n40%, 60% {\n  transform: translate3d(5px, 0, 0);\n}\n  `;\n\n//finish component\nexport const PlayAgainButton = styled.button`\n  color: #2f2b32;\n  background-color: #f2f2f2;\n  border: none;\n  outline: none;\n  font-weight: bold;\n  padding: 10px 35px;\n  margin-top: 50px;\n  font-size: 25px;\n  font-family: \"Cutive Mono\", monospace;\n  cursor: pointer;\n  &:hover {\n    ${glow}\n  }\n`;\n\nexport const Score = styled.p`\n  font-size: ${(props) => props.size || 50}px;\n  margin: 0 0 20px 0;\n`;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  Question,\n  Option,\n  SubmitButton,\n  CardWindowBar,\n  ButtonContainer,\n} from \"./styled\";\n\nimport close from \"../images/close.svg\";\n\nconst CurrentCard = ({\n  question,\n  setScore,\n  score,\n  getNextQuestion,\n  hasSubmitted,\n  setHasSubmitted,\n  questionNumber,\n  selectedOption,\n  setSelectedOption,\n}) => {\n  const [isEmpty, setIsEmpty] = useState(false);\n\n  function setSelectedValue(option) {\n    if (!hasSubmitted) {\n      setSelectedOption(option);\n    }\n  }\n  function checkSelect(selected) {\n    if (selected === selectedOption) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  function checkCorrectAnswer(option) {\n    if (option === question.correct) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  function matchAnswer(e, finalAnswer) {\n    e.preventDefault();\n    if (finalAnswer === \"\") {\n      setIsEmpty(true);\n      return;\n    } else {\n      setHasSubmitted(true);\n    }\n    if (finalAnswer === question.correct) {\n      setScore(score + 1);\n    }\n  }\n\n  return (\n    <Card>\n      <CardWindowBar>\n        <p>Question {questionNumber}:</p>\n        <Link to=\"/\">\n          <img src={close} alt=\"to home\" width=\"20\" />\n        </Link>\n      </CardWindowBar>\n      <Question>{question.question}</Question>\n      {question.options.map((option) => {\n        return (\n          <Option\n            key={option}\n            isCorrect={checkCorrectAnswer(option)}\n            onClick={() => setSelectedValue(option)}\n            isActive={checkSelect(option)}\n            isEmpty={isEmpty}\n            onAnimationEnd={() => setIsEmpty(false)}\n            hasSubmitted={hasSubmitted}\n          >\n            <p>{option}</p>\n          </Option>\n        );\n      })}\n      <ButtonContainer>\n        {!hasSubmitted && (\n          <SubmitButton\n            onClick={(e) => matchAnswer(e, selectedOption)}\n            disabled={hasSubmitted}\n          >\n            Submit\n          </SubmitButton>\n        )}\n        {hasSubmitted && (\n          <SubmitButton onClick={getNextQuestion} disabled={!hasSubmitted}>\n            Next\n          </SubmitButton>\n        )}\n      </ButtonContainer>\n    </Card>\n  );\n};\n\nexport default CurrentCard;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, PlayAgainButton, Score, CardWindowBar } from \"./styled\";\nimport close from \"../images/close.svg\";\n\nconst Finish = ({ score }) => {\n  function reload() {\n    window.location.reload(true);\n  }\n  return (\n    <Card justify={\"space-between\"}>\n      <CardWindowBar justify={\"flex-end\"}>\n        <Link to=\"/\">\n          <img src={close} alt=\"to home\" width=\"20\" />\n        </Link>\n      </CardWindowBar>\n      <div>\n        <Score size={25}>Score:</Score>\n        <Score>{score}/10</Score>\n      </div>\n      <PlayAgainButton onClick={(e) => reload()}>Play Again</PlayAgainButton>\n    </Card>\n  );\n};\n\nexport default Finish;\n","const triviaQuestions = [\n  {\n    question: \"What was Tandem previous name?\",\n    incorrect: [\"Tandem\", \"Burger Shack\", \"Extraordinary Humans\"],\n    correct: \"Devmynd\",\n  },\n  {\n    question:\n      \"In Shakespeare's play Julius Caesar, Caesar's last words were...\",\n    incorrect: [\"Iacta alea est!\", \"Vidi, vini, vici\", \"Aegri somnia vana\"],\n    correct: \"Et tu, Brute?\",\n  },\n  {\n    question: \"A group of tigers are referred to as:\",\n    incorrect: [\"Chowder\", \"Pride\", \"Destruction\"],\n    correct: \"Ambush\",\n  },\n  {\n    question: \"What is the top speed an average cat can travel?\",\n    incorrect: [\"42 mph\", \"13 mph\", \"9 mph\"],\n    correct: \"31 mph\",\n  },\n  {\n    question: \"A cat can jump to _____ times its own height:\",\n    incorrect: [\"3\", \"9\", \"7\"],\n    correct: \"5\",\n  },\n  {\n    question: \"What is the only letter that doesn't appear in a US state name?\",\n    incorrect: [\"M\", \"Z\", \"X\"],\n    correct: \"Q\",\n  },\n  {\n    question: \"What is the name for a cow-bison hybrid?\",\n    incorrect: [\"Cowson\", \"Bicow\", \"Mooson\"],\n    correct: \"Beefalo\",\n  },\n  {\n    question: \"What is the largest freshwater lake in the world?\",\n    incorrect: [\"Lake Baikal\", \"Lake Michigan\", \"Lake Victoria\"],\n    correct: \"Lake Superior\",\n  },\n\n  {\n    question: \"In a website address bar, what does WWW stand for?\",\n    incorrect: [\"Wild Wild West\", \"War World Web\"],\n    correct: \"World Wide Web\",\n  },\n  {\n    question:\n      \"In a game of bingo, what number is represented by the name two little ducks?\",\n    incorrect: [\"20\", \"55\", \"77\"],\n    correct: \"22\",\n  },\n  {\n    question: \"According to Greek mythology, who was the first woman on Earth?\",\n    incorrect: [\"Lilith\", \"Eve\", \"Hera\"],\n    correct: \"Pandora\",\n  },\n  {\n    question: \"In which European city would you find Orly airport?\",\n    incorrect: [\"London\", \"Belgium\", \"Munich\"],\n    correct: \"Paris\",\n  },\n  {\n    question: \"Where would you find the Sea of Tranquility?\",\n    incorrect: [\"California\", \"Siberia\", \"China\"],\n    correct: \"The Moon\",\n  },\n  {\n    question: \"Which artist painted 'Girl with a Pearl Earrin'?\",\n    incorrect: [\"Van Gogh\", \"Picasso\", \"Da Vinci\"],\n    correct: \"Vermeer\",\n  },\n  {\n    question: \"What is the official name for the 'hashtag' symbol?\",\n    incorrect: [\"Number sign\", \"Hash Sign\", \"Pound\"],\n    correct: \"Octothorpe\",\n  },\n  {\n    question: \"Not American at all, where is apple pie from?\",\n    incorrect: [\"Japan\", \"Ethiopia\", \"Canada\"],\n    correct: \"England\",\n  },\n  {\n    question: \"What is the national animal of Scotland?\",\n    incorrect: [\"Bear\", \"Rabbit\", \"Seal\"],\n    correct: \"Unicorn\",\n  },\n  {\n    question:\n      \"Where in the world is the only place where Canada is *due south*\",\n    incorrect: [\"Alaska\", \"Russia\", \"Washington\"],\n    correct: \"Detroit\",\n  },\n  {\n    question: \"Approximately how many grapes go into a bottle of wine?\",\n    incorrect: [\"500\", \"200\", \"1000\"],\n    correct: \"700\",\n  },\n  {\n    question: \"How much does a US One Dollar Bill cost to make?\",\n    incorrect: [\"$0.25\", \"$1\", \"$5\"],\n    correct: \"$0.05\",\n  },\n  {\n    question:\n      \"The Vatican bank has the only ATM in the world that allows users to do what?\",\n    incorrect: [\n      \"Receive withdrawls in rosary beads\",\n      \"Vote for the Pope\",\n      \"Purchase indulgences\",\n    ],\n    correct: \"Perform transactions in Latin\",\n  },\n];\n\nexport default triviaQuestions;\n","import React, { useState } from \"react\";\nimport { CardsContainer, Score } from \"./styled\";\n\nimport CurrentCard from \"./CurrentCard\";\nimport Finish from \"./Finish\";\nimport triviaQuestions from \"./triviaQuestions\";\n\nexport function selectRandomQuestions(triviaQuestions) {\n  const questions = [];\n  const totalQuestions = triviaQuestions.length;\n\n  while (questions.length !== 10) {\n    const random_index = Math.floor(Math.random() * Math.floor(totalQuestions));\n    if (!questions.includes(random_index)) {\n      questions.push(random_index);\n    }\n  }\n  return questions;\n}\n\nconst currentRoundQuestions = selectRandomQuestions(triviaQuestions);\nconst firstQuestion = triviaQuestions[currentRoundQuestions.pop()];\n\nexport function getRandomizedOptions(question) {\n  const allOptions = question.incorrect.concat(question.correct);\n  const randomizedAllOptions = [];\n  while (randomizedAllOptions.length !== allOptions.length) {\n    const selectedOption =\n      allOptions[Math.floor(Math.random() * allOptions.length)];\n    if (!randomizedAllOptions.includes(selectedOption)) {\n      randomizedAllOptions.push(selectedOption);\n    }\n  }\n  return randomizedAllOptions;\n}\n\nconst options = getRandomizedOptions(firstQuestion);\nfirstQuestion[\"options\"] = options;\n\nconst Cards = () => {\n  const [score, setScore] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [currentQuestion, setCurrentQuestion] = useState(firstQuestion);\n  const [hasSubmitted, setHasSubmitted] = useState(false);\n  const [isFinished, setIsFinished] = useState(false);\n  const [questionNumber, setQuestionNumber] = useState(1);\n\n  function getNextQuestion() {\n    if (currentRoundQuestions.length === 0) {\n      setIsFinished(true);\n    } else {\n      const nextQuestion = triviaQuestions[currentRoundQuestions.pop()];\n      const nextOptions = getRandomizedOptions(nextQuestion);\n      nextQuestion[\"options\"] = nextOptions;\n      setCurrentQuestion(nextQuestion);\n      setQuestionNumber(questionNumber + 1);\n      setHasSubmitted(false);\n      setSelectedOption(\"\");\n    }\n  }\n\n  if (currentQuestion === undefined) {\n    return null;\n  }\n\n  return (\n    <CardsContainer>\n      {!isFinished && <Score size={25}>Score: {score}</Score>}\n      {!isFinished && (\n        <CurrentCard\n          question={currentQuestion}\n          setScore={setScore}\n          score={score}\n          getNextQuestion={getNextQuestion}\n          hasSubmitted={hasSubmitted}\n          setHasSubmitted={setHasSubmitted}\n          questionNumber={questionNumber}\n          selectedOption={selectedOption}\n          setSelectedOption={setSelectedOption}\n        />\n      )}\n      {isFinished && <Finish score={score} />}\n    </CardsContainer>\n  );\n};\n\nexport default Cards;\n","import React, { useState } from \"react\";\n\nconst DEBUG = process.env.NODE_ENV === \"development\" ? true : false;\nconst PREFIX = DEBUG\n  ? \"http://0.0.0.0:8000\"\n  : \"https://triviaknowledge.herokuapp.com/\";\nconst api_path = PREFIX + \"/api/question\";\n\nconst Customize = () => {\n  const [newQuestion, setNewQuestion] = useState(\"\");\n  const [newQuestionOption1, setNewQuestionOption1] = useState(\"\");\n  const [newQuestionOption2, setNewQuestionOption2] = useState(\"\");\n  const [newQuestionOption3, setNewQuestionOption3] = useState(\"\");\n  const [newQuestionAnswer, setNewQuestionAnswer] = useState(\"\");\n\n  async function addQuestion() {\n    try {\n      const response = await fetch(api_path, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          question: newQuestion,\n          options: [newQuestionOption1, newQuestionOption2, newQuestionOption3],\n          answer: newQuestionAnswer,\n        }),\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  return (\n    <div>\n      <p>Question</p>\n      <input type=\"text\" onChange={(e) => setNewQuestion(e.target.value)} />\n      <p>Wrong Options</p>\n      <div>\n        <input\n          type=\"text\"\n          onChange={(e) => setNewQuestionOption1(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          onChange={(e) => setNewQuestionOption2(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          onChange={(e) => setNewQuestionOption3(e.target.value)}\n        />\n      </div>\n      <p>Answer</p>\n      <input\n        type=\"text\"\n        onChange={(e) => setNewQuestionAnswer(e.target.value)}\n      />\n      <button onClick={() => addQuestion()}>Submit</button>\n    </div>\n  );\n};\n\nexport default Customize;\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Homepage from \"./Homepage\";\nimport Cards from \"./Cards\";\nimport Customize from \"./Customize\";\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <div className=\"App\">\n        <Route exact path=\"/\" component={Homepage} />\n        <Route path=\"/cards\" component={Cards} />\n        <Route path=\"/customize\" component={Customize} />\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}